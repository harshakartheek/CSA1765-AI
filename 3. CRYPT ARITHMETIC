import itertools

def solve_cryptoarithmetic():
    letters = 'SENDMORY'
    digits = range(10)

    for perm in itertools.permutations(digits, len(letters)):
        letter_to_digit = dict(zip(letters, perm))
        send = int(''.join(str(letter_to_digit[letter]) for letter in 'SEND'))
        more = int(''.join(str(letter_to_digit[letter]) for letter in 'MORE'))
        money = int(''.join(str(letter_to_digit[letter]) for letter in 'MONEY'))

        if send + more == money:
            return letter_to_digit, send, more, money

    return None

if __name__ == "__main__":
    solution = solve_cryptoarithmetic()
    
    if solution:
        letter_to_digit, send, more, money = solution
        print(f"Solution found!")
        print(f"Letter to digit mapping: {letter_to_digit}")
        print(f"SEND = {send}")
        print(f"MORE = {more}")
        print(f"MONEY = {money}")
    else:
        print("No solution found.")
   
